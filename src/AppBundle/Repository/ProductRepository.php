<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Product;
use Doctrine\ORM\EntityRepository;
use Pagerfanta\Adapter\DoctrineORMAdapter;
use Pagerfanta\Pagerfanta;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{

  /**
   * Recuperate last enabled product
   * @param cid : Category id  
   * @return Query
   */
  public function queryLatest($cid)
  {
      if(!empty($cid))
      {
        $query = $this->getEntityManager()
          ->createQuery('
              SELECT p
              FROM AppBundle:Product p
              INNER JOIN AppBundle:Category c WITH p.category = c.id
              WHERE p.enabled = true
              AND c.id = :cid
              ORDER BY p.updatedAt, p.createdAt DESC
          ')
        ;
        $query->setParameter('cid', $cid);
        return $query;        
      } else {
        return $this->getEntityManager()
          ->createQuery('
              SELECT p
              FROM AppBundle:Product p
              WHERE p.enabled = true
              ORDER BY p.updatedAt, p.createdAt DESC
          ')
        ;
      }
  }

  /**
   * @param int $page
   *
   * @return
   */
  public function findLatest($page = 1, $cid)
  {
      $paginator = new Pagerfanta(new DoctrineORMAdapter($this->queryLatest($cid), false));
      $paginator->setMaxPerPage(Product::NUM_ITEMS);
      $paginator->setCurrentPage($page);

      return $paginator;
  }
}
